# name: PR Automation
# on:
#   pull_request:
#     types: [opened]
#   pull_request_review:
#     types: [submitted]

# permissions:
#   contents: read
#   pull-requests: write

# jobs:
#   welcome:
#     if: github.event.action == 'opened'
#     name: Post welcome comment
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4
        
#       - name: Post welcome comment
#         run: gh pr comment "$PR_URL" --body "Welcome to the repository! This comment is auto-generated by the GitHub Actions bot (Created by Wayne)."
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           PR_URL: ${{ github.event.pull_request.html_url }}
          
#       - name: Auto-label PR based on files
#         uses: actions/labeler@v5
#         with:
#           repo-token: ${{ secrets.GITHUB_TOKEN }}
#           configuration-path: .github/labeler.yml
#           sync-labels: true

#   label-approved:
#     if: github.event.review.state == 'approved'
#     name: Label approved PR
#     runs-on: ubuntu-latest
#     steps:
#       - name: Add approved label
#         run: gh pr edit "$PR_URL" --add-label "approved"
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           PR_URL: ${{ github.event.pull_request.html_url }}
          
#       - name: Comment on approval
#         run: gh pr comment "$PR_URL" --body "üéâ This PR has been approved!"
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           PR_URL: ${{ github.event.pull_request.html_url }}
name: PR Automation
on:
  pull_request:
    types: [opened]
  pull_request_review:
    types: [submitted]

permissions:
  contents: read
  pull-requests: write

jobs:
  welcome:
    if: github.event.action == 'opened'
    name: Post welcome comment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Post welcome comment
        run: gh pr comment "$PR_URL" --body "Welcome to the repository! This comment is auto-generated by the GitHub Actions bot (Created by Wayne)."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.pull_request.html_url }}
          
      - name: Debug - Check if labeler config exists
        run: |
          echo "=== Debugging labeler configuration ==="
          echo "Current working directory:"
          pwd
          echo ""
          echo "Repository structure:"
          find . -name "*.yml" -o -name "*.yaml" | head -20
          echo ""
          echo "Contents of .github directory:"
          ls -la .github/ || echo ".github directory not found"
          echo ""
          echo "Looking for labeler.yml specifically:"
          if [ -f ".github/labeler.yml" ]; then
            echo "‚úÖ labeler.yml found at .github/labeler.yml"
            echo "File size: $(stat -c%s .github/labeler.yml) bytes"
            echo "File contents:"
            echo "--- START OF FILE ---"
            cat .github/labeler.yml
            echo "--- END OF FILE ---"
          else
            echo "‚ùå labeler.yml not found at .github/labeler.yml"
          fi
          echo ""
          echo "GitHub context info:"
          echo "Repository: ${{ github.repository }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          echo "=== End debugging ==="
          
      - name: Auto-label PR based on files
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml
          sync-labels: true

  label-approved:
    if: github.event.review.state == 'approved'
    name: Label approved PR
    runs-on: ubuntu-latest
    steps:
      - name: Add approved label
        run: gh pr edit "$PR_URL" --add-label "approved"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.pull_request.html_url }}
          
      - name: Comment on approval
        run: gh pr comment "$PR_URL" --body "üéâ This PR has been approved!"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.pull_request.html_url }}
